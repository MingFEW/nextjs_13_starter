{
  "env": {
    "es6": true,
    "browser": true
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "plugin:tailwindcss/recommended",
    "plugin:prettier/recommended",
    "next/core-web-vitals" // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ],
    "import/extensions": 0, // Avoid missing file extension errors, TypeScript already provides a similar feature
    "react/destructuring-assignment": ["warn", { "object": true, "array": false }], // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
    "react/require-default-props": 0, // Allow non-defined react props as undefined
    "react/jsx-props-no-spreading": 0, // _app.tsx uses spread operator and also, react-hook-form
    "@next/next/no-img-element": 0, // We currently not using next/image because it isn't supported with SSG mode
    "@typescript-eslint/comma-dangle": 0, // Avoid conflict rule between Eslint and Prettier
    "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ], // Overrides Airbnb configuration and enable no-restricted-syntax
    "import/prefer-default-export": 0, // Named export is easier to refactor automatically
    "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "@typescript-eslint/no-unused-vars": 0,
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [["builtin", "external"], "internal", ["parent", "sibling", "index"]],
        "newlines-between": "always",
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}